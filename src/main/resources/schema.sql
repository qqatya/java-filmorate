CREATE TABLE IF NOT EXISTS genre (
                                id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                name VARCHAR(25) NOT NULL
);

CREATE TABLE IF NOT EXISTS rating (
                                id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                name VARCHAR(5) NOT NULL
);

CREATE TABLE IF NOT EXISTS film (
                                id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                name VARCHAR(100) NOT NULL,
                                description VARCHAR(200),
                                release_date DATE,
                                duration BIGINT,
                                rating_id INTEGER REFERENCES rating (id)
);

CREATE TABLE IF NOT EXISTS film_genre (
                                film_id INTEGER REFERENCES film (id) ON DELETE CASCADE,
                                genre_id INTEGER REFERENCES genre (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS person (
                                id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                email VARCHAR(320) NOT NULL,
                                login VARCHAR(100) NOT NULL,
                                name VARCHAR(150) NOT NULL,
                                birthday DATE
);

CREATE TABLE IF NOT EXISTS film_like (
                                film_id INTEGER REFERENCES film (id) ON DELETE CASCADE,
                                liked_person_id INTEGER REFERENCES person (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS friendship (
                                person_id INTEGER REFERENCES person (id) ON DELETE CASCADE,
                                friend_id INTEGER REFERENCES person (id) ON DELETE CASCADE,
                                is_confirmed BOOLEAN
);

CREATE TABLE IF NOT EXISTS events_log (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    event_timestamp TIMESTAMP NOT NULL,
    operation CHARACTER VARYING NOT NULL,
    event_type CHARACTER VARYING NOT NULL,
    user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
    entity_id INTEGER NOT NULL
);